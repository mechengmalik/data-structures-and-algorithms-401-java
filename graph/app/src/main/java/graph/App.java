/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import java.util.ArrayList;
import java.util.List;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        Graph<Integer> graph1 = new Graph<>();

//        Node<Integer> node1 = graph1.addNode(5);
//        Node<Integer> node2 = graph1.addNode(6);
//        graph1.addEdge(node1,node2,true);
//
//        Node<Integer> node3 = graph1.addNode(4);
//        Node<Integer> node4 = graph1.addNode(3);
//        graph1.addEdge(node3,node4,false);
//
//        graph1.addEdge(node1,node3,true);
//        graph1.addEdge(node2,node4,false);
//
//        System.out.println(graph1.getNodes().size());
//        System.out.println(graph1.getNodes().);
//        System.out.println(graph1.getNeighbors(node1).toString());

        //-------------------------------------//
        Graph<String> graph2 = new Graph<>();


        Node<String> a = graph2.addNode("M");
        Node<String> b =  graph2.addNode("A");
        Node<String> c = graph2.addNode("L");
        Node<String> d = graph2.addNode("I");
        Node<String> e = graph2.addNode("K");

        graph2.addEdge(a,b,true);
        graph2.addEdge(b,c,true);
        graph2.addEdge(c,d,true);
        graph2.addEdge(d,e,true);
//        graph2.addEdge(e,e,true);

        graph2.breadthF(a);


        //-------------------------graphBusinessTrip------------//
        Graph<String> travelGraph = new Graph<>();
        List<String> cities =new ArrayList<>();
        cities.add("Amman");
        cities.add("Aqaba");
        cities.add("Irbid");
        cities.add("Salt");


//        Node<String> c1 =  travelGraph.addNode(cities.get(0));
//        Node<String> c2 = travelGraph.addNode(cities.get(1));
//        Node<String> c3 = travelGraph.addNode(cities.get(2));
//        Node<String> c4 = travelGraph.addNode(cities.get(3));
//
//        travelGraph.addEdge(c1,c2,true);
//        travelGraph.addEdge(c2,c3,true);
//        travelGraph.addEdge(c3,c4,true);
//        travelGraph.addEdge(c4,c1,true);
//        travelGraph.addEdge(c2,c4,true);


//        System.out.println(travelGraph.getNodes().size());
//        System.out.println(travelGraph.getNodes());
//        System.out.println(travelGraph.getNeighbors(c1).toString());
//        System.out.println(travelGraph.graphBusinessTrip(travelGraph,cities));

        //---------------------depth-first-----------------//

        //A, B, C, G, D, E, H, F
        Graph<String> graphDF = new Graph<>();

        Node<String> A = graphDF.addNode("A");
        Node<String> B =  graphDF.addNode("B");
        Node<String> C = graphDF.addNode("C");
        Node<String> D = graphDF.addNode("D");
        Node<String> E = graphDF.addNode("E");
        Node<String> F = graphDF.addNode("F");
        Node<String> G = graphDF.addNode("G");
        Node<String> H = graphDF.addNode("H");


        graphDF.addEdge(A,B,false);
        graphDF.addEdge(A,D,false);
        graphDF.addEdge(B,C,false);
        graphDF.addEdge(B,D,false);
        graphDF.addEdge(C,G,false);
        graphDF.addEdge(D,E,false);
        graphDF.addEdge(D,H,false);
        graphDF.addEdge(D,F,false);
        graphDF.addEdge(H,F,false);


        System.out.println(graphDF.depthFirst(A));

    }


}

