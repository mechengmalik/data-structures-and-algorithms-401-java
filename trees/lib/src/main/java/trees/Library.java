/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

import static trees.KaryTree.fizzBuzzTree;

public class Library {
    public static void main(String[] args) {


        BinarySearchTree<Integer> test = new BinarySearchTree<>(5);

        System.out.println(test.contains(4, test.root));




        test.add(4);
        test.add(8);
        test.add(3);

        System.out.println(test.contains(5,test.root));
        System.out.println(test.inOrder(test.root).toString());


        System.out.println(test.Max());


        //------------------breadthFirst------------------------//

        System.out.println(breadthFirst(test));


        //------------------KaryTree------------------------//

        KaryTree<Integer> tree = new KaryTree<>(3);
        tree.add(3);
        tree.add(5);
        tree.add(15);
        tree.add(9);
        tree.add(20);
        tree.add(8);

        System.out.println(tree.breadthFirstSearch());
        System.out.println(KaryTree.fizzBuzzTree(tree).breadthFirstSearch());


    }


    public static ArrayList<Integer>  breadthFirst(BinaryTree<Integer> tree){
        ArrayList<Integer> values =new ArrayList<Integer>();
        Queue<Node> q1 = new LinkedList<>();
        q1.add(tree.root);
        while (!q1.isEmpty()){


            Node n = q1.remove();
            values.add((Integer) n.value);
            if (n.leftRoot != null ){
                q1.add(n.leftRoot);
            }
            if (n.rightRoot != null){
                q1.add(n.rightRoot);
            }

        }

        return values;
    }








}
